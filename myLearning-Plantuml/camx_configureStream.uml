/'派生，继承：<|--'/
/'组合：*-- ， 将会管理对象的生命周期'/
/'聚合：o--, 特指不管理对象的生命周期，但存在关联'/
/'
title <size:18>camx awb overview</size>\n     Lin Jin

collections ThreadUsers

<color:red><size:16>****</size></color>

<color:blue><size:15></size></color>

package <color:blue><size:15>**AWBDecisionAggregator** {
}

== <color:blue> CAWBMain::Configure </color>==

participant XXX

box "Factory"
participant camxcawbfactory as awb_factory
end box



<color:red>TODO: this need check further</color>


Useful color:
1. Red
Red Crimson DeepPink LightPink Salmon HotPink

2. Blue
MediumBlue Blue DodgerBlue DeepSkyBlue Cyan LightSkyBlue SlateBlue SkyBlue

3. Green
Chartreuse Green GreenYellow LawnGreen Lime LightGreen SpingGreen

4. Yellow
Yellow Gold LightGoldenRodYellow Orange LemonChiffon

5. Violet
DarkMagenta BlueViolet DardViolet Magenta Fuchsia Purple

6. 
'/

@startuml

participant chxextensioninterface

participant chxextensionmodule

participant chxusecaseutils

participant chxadvancedcamerausecase

box "Features"
participant chxfeaturehdr
participant chxfeaturerawjpeg
end box

== <color:blue> **ConfigStream** </color>==
note left chxextensioninterface
  <color:Blue>**Call Seq**</color>
  **HALDevice::ConfigureStreams->**
    |--**CHITeardownOverrideSession**
    |--**CHIModuleInitialize->**
        |--**CHIInitializeOverrideSession->**
          |--**chi_initialize_override_session**
end note

[o->chxextensioninterface: **chi_initialize_override_session**
activate chxextensioninterface
    chxextensioninterface->chxextensionmodule: **InitializeOverrideSession**
    activate chxextensionmodule
        chxextensionmodule->chxusecaseutils: <color:blue>**GetMatchingUsecase()**</color>
        activate chxusecaseutils
            note over chxusecaseutils
              ** If physical cam >1 && num_streams>1 choose MultiCamera**
              ** others may according to num of Streams and Flags**
            end note
        chxextensionmodule<-chxusecaseutils: <color:blue>**return**</color>
        deactivate chxusecaseutils

        chxextensionmodule->chxusecaseutils: <color:blue>**CreateUsecaseObject**</color>
        activate chxusecaseutils
            note over chxusecaseutils
              **UsecaseID<-------------------------------->Instance**
              **PreviewZSL/VideoLiveShot<-->AdvancedCameraUsecase**
              **MultiCamera<-->UsecaseDualCamera/UsecaseMultiCamera**
              **QuadCFA<-->AdvancedCameraUsecase/UsecaseQuadCFA:/**
              **Torch<-->UsecaseTorch**
            end note
        chxextensionmodule->chxusecaseutils: <color:blue>return</color>
        deactivate chxusecaseutils
    chxextensioninterface<-chxextensionmodule: **return**
    deactivate chxextensionmodule
[o<-chxextensioninterface: return
deactivate chxextensioninterface

/'
##########################################################################################################
'/
newpage AdvancedCameraUsecase create

chxusecaseutils->chxadvancedcamerausecase: <color:blue>**AdvancedCameraUsecase::Create**</color>
activate chxadvancedcamerausecase
    chxadvancedcamerausecase->chxadvancedcamerausecase: **Initialize()**
    activate chxadvancedcamerausecase
        note right chxadvancedcamerausecase
          1. **Malloc m_pRdiStream m_pFdStream m_pBayer2YuvStream m_pJPEGInputStream**
          2. **if the stream_type is CAMERA3_STREAM_INPUT, m_isReprocessUsecase=TRUE**
          3. **For QuadCFA, preview use binning size**
        end note
        chxadvancedcamerausecase->chxadvancedcamerausecase: **FeatureSetup()**
        activate chxadvancedcamerausecase
        chxadvancedcamerausecase<-chxadvancedcamerausecase: return
        deactivate chxadvancedcamerausecase

        chxadvancedcamerausecase->chxadvancedcamerausecase: **SelectUsecaseConfig()**
        activate chxadvancedcamerausecase
            alt usecaseId=PreviewZSL || YUVInBlobOut || VideoLiveShot || MultiCamera || QuadCFA
              chxadvancedcamerausecase->chxadvancedcamerausecase: **BuildUsecase()**
              activate chxadvancedcamerausecase
                note right chxadvancedcamerausecase
                  1. **assign the m_pPreviewStream m_pSnapshotStream from StreamConfig**
                  2. **run getSensorDimension()**
                  3. **query unique pipeline of feature(GetRequiredPipelines), and inset to pipelines array**
                  4. **SetPipelineToSessionMapping**
                  5. **SetPipelineToCameraMapping**
                  6. <color:blue>**m_enabledFeatures->OverrideUsecase()**</color>
                     take HDR as example
                end note
                alt loop **m_enabledFeaturesCount**
                  chxadvancedcamerausecase->chxfeaturehdr: **OverrideUsecase()**
                  activate chxfeaturehdr
                    note right chxfeaturehdr
                    end note
                  chxadvancedcamerausecase->chxfeaturehdr: return
                  deactivate chxfeaturehdr
                end
              chxadvancedcamerausecase->chxadvancedcamerausecase: **return**
              deactivate chxadvancedcamerausecase
            else usecaseId == **RawJPEG**
              chxadvancedcamerausecase->chxfeaturerawjpeg: **OverrideUsecase()**
              activate chxfeaturerawjpeg
              chxadvancedcamerausecase<-chxfeaturerawjpeg: return
              deactivate chxfeaturerawjpeg
            end
        chxadvancedcamerausecase<-chxadvancedcamerausecase: return
        deactivate chxadvancedcamerausecase
    chxadvancedcamerausecase->chxadvancedcamerausecase: **return**
    deactivate chxadvancedcamerausecase
chxusecaseutils<-chxadvancedcamerausecase: **return**
deactivate chxadvancedcamerausecase
@enduml
