@startuml

title Dual Camera

participant QCamera2HWI.cpp as QCamera2HWI
participant QCameraParameters.cpp as QCameraParams
participant mm_camera_interface.c as mm_camera_interf
participant mm_camera.c as mm_camera
participant mct_pipeline.c as mct_pipeline
participant af_port.c as af_port
participant af_biz.c as af_biz
participant af_core.c as af_core
participant af_haf.c as af_haf
participant af_fdprio.c as af_fdprio
participant mct_port.h as mct_port_h
participant stats_util.c as stats_util

== how to Link camera togather ==

== what af_port_init done ==
[o->af_port: af_port_init
af_port->af_port: af_port_pd_zero_touch_lag_update
af_port->af_port: af_port_load_dummy_default_func
af_port->af_port: af_port_update_func_table
af_port->af_fdprio: fdprio_process
af_port->mct_port_h: mct_port_set_event_func **af_port_event**
af_port->mct_port_h: mct_port_set_intra_event_func **af_port_intra_event**
af_port->mct_port_h: mct_port_set_ext_link_func  **af_port_ext_link**
af_port->mct_port_h: mct_port_set_unlink_func  **af_port_ext_unlink**
af_port->mct_port_h: mct_port_set_set_caps_func  **af_port_set_caps**
af_port->mct_port_h: mct_port_set_check_caps_reserve_func  **af_port_check_caps_reserve**
af_port->mct_port_h: mct_port_set_check_caps_unreserve_func  **af_port_check_caps_unreserve**

==<color #ff0000> how to sync Msg between master/slave?</color>==
[o->af_port: MCT_EVENT_CONTROL_LINK_INTRA_SESSION
af_port->af_port: af_port_link_to_peer
note over af_port
  get peer port (sink port)
  set dual_cam_info
end note

af_port->stats_util: stats_util_get_peer_port
af_port->af_port: af_port_handle_role_switch
af_port->mct_port_h: MCT_PORT_INTRALINKFUNC:  af_port_intra_event

group detail of af_port_intra_event
  alt case MCT_EVENT_MODULE_STATS_PEER_UPDATE_EVENT
    af_port->af_port: af_port_handle_peer_focus_info
    af_port->af_biz: AF_SET_PARAM_SET_PEER_FOCUS_INFO
    af_biz->af_core: AF_CORE_SET_PEER_FOCUS_INFO
    af_core->af_haf: af_haf_store_peer_info
    af_core->af_haf: af_haf_set_param
    af_haf->af_haf_follower: AF_HAF_SET_PARAM_PEER_FOCUS_INFO
    note over af_haf_follower
        receive Peer info 
            FineSearch_cmd
            FocusStatus
            distanceOfObjectOfinterest
            currentdistanceOfObject
    end note
  else MCT_EVENT_MODULE_STATS_PEER_UNLINK
    af_port->af_port: af_port_local_unlink
    af_port->af_port: af_port_reset_dual_cam_info
  else MCT_EVENT_MODULE_STATS_PEER_LPM_EVENT
    af_port->af_port: af_port_LPM_from_peer
  end
end

== how to Destroy ==

== Low Power Mode af_port_update_LPM==

== Role Switch af_port_handle_role_switch ==
[o->QCamera2HWI: processDualCamFovControl
QCamera2HWI->QCamera2HWI: switchCameraCb
QCamera2HWI->QCameraParams: setSwitchCamera
note over QCameraParams: Trigger event to update master

alt CAM_DUAL_CAMERA_MASTER_INFO
  QCameraParams->QCameraParams: sendDualCamCmd()
  QCameraParams->mm_camera_interf: mm_camera_intf_set_dual_cam_cmd
  group detail of mm_camera_intf_set_dual_cam_cmd
    note over mm_camera_interf: both Master/Slave will run mm_camera_set_dual_cam_cmd
    mm_camera_interf->mm_camera: mm_camera_set_dual_cam_cmd
    ...many layer of call **Function Pointer**...
    mm_camera->mct_pipeline: mct_pipeline_process_dual_cam_cmd

    group detail of mct_pipeline_process_dual_cam_cmd
      alt CAM_DUAL_CAMERA_MASTER_INFO
          ...many layers af_port_handle_control_event process cmd...
          mct_pipeline->af_port: af_port_handle_role_switch
          af_port->af_port: af_port_update_aux_sync_and_update
          note over af_port
              condition:
                dual_cam_info.sync_3a_mode
                dual_cam_info.mode
                dual_cam_info.is_LPM_on
          end note
          af_port->af_port: af_port_set_role_switch

          group detail of af_port_set_role_switch
              note over af_port: send msg AF_SET_PARAM_SET_ROLE_SWITCH
              af_port->af_biz: AF_SET_PARAM_SET_ROLE_SWITCH
              af_biz->af_core: AF_CORE_SET_ROLE_SWITCH

              group detail of AF_CORE_SET_ROLE_SWITCH
                  af_core->af_haf: af_haf_set_param (AF_HAF_SET_PARAM_ROLE_SWITCH)

                  note over af_haf
                      what AF_HAF_SET_PARAM_ROLE_SWITCH do?
                      for master: pMixer->p_primary = pMixer->p_active_algo
                      for slave:  pMixer->p_primary = pMixer->p_follower_algo
                  end note
                  af_core->af_haf: af_haf_handle_role_switch

                  note over af_haf
                    three strategys in af_haf_follower.c
                    AF_FOLLOWER_COARSE_FOLLOW: main PD cur_pos + fine search
                    AF_FOLLOWER_COMPLETE_FOLLOW: main PD cur_pos
                    AF_FOLLOWER_INITIAL_FOLLOW_PDAF: slave monitor + PD converge
                    AF_FOLLOWER_SEQUENTIAL_FOLLOW:
                  end note
              end

          end

      else CAM_DUAL_CAMERA_BUNDLE_INFO
      else CAM_DUAL_CAMERA_LOW_POWER_MODE
      end
    end

  end
else CAM_DUAL_CAMERA_BUNDLE_INFO
  QCameraParams->QCameraParams: sendDualCamCmd()
else CAM_DUAL_CAMERA_LOW_POWER_MODE
  QCameraParams->QCameraParams: sendDualCamCmd()
end

@enduml
