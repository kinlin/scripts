@startuml
title
    == statsprocess flow
    There will be 2 Stats Node:
    one for **AF** and one for rest of the stats modules(AEC/AWB/AFD/ASD)
    <img:StatsProcessingModule.png>
end title
participant camxstatsprocessormanager.cpp as statsprocess
participant camxthreadmanager.cpp as camxthreadM
participant camxaecengine.cpp as aecengine
participant camxaecstatsprocessor.cpp as aecstatsprocessor
participant camxawbstatsprocessor.cpp as awbstatsprocessor
participant camxcafdstatsprocessor.cpp as cafdstatsprocessor
participant camxcasdstatsprocessor.cpp as casdstatsprocessor
participant camxstatsprocessingnode.cpp as camxstatsprocessingnode
participant camxmultistatsoperator.cpp as camx_multistats


opt StatsProcessorManager::Initialize
[o->statsprocess: StatsProcessorManager::Initialize
statsprocess->camxthreadM:RegisterJobFamily(StatsProcessorManagerThreadCb)
camxthreadM->camxthreadM:RegisterNewJob
note right of camxthreadM: set pRegisteredJob and can call GetJobFunc obtain cb

statsprocess->aecengine:CAECEngine::Initialize
statsprocess->awbstatsprocessor:CAWBStatsProcessor::Initialize
statsprocess->cafdstatsprocessor:CAFDStatsProcessor::Initialize
statsprocess->casdstatsprocessor:CASDStatsProcessor::Initialize

end

== ExecuteProcessRequest ==
[o->statsprocess: StatsProcessingNode::ExecuteProcessRequest
activate statsprocess

statsprocess->statsprocess: PrepareStatsProcessRequestData
note left statsprocess
  QueryVendorTagLocation("com.qti.chi.multicamerainfo")
  set pStatsProcessRequestData->cameraInfo.cameraTypr
      Type contail **StatsCameraTypeWide**
                   **StatsCameraTypeTele**
                   **StatsCameraTypeVR**
end note
statsprocess->statsprocess: **GetPropertyDependencies**
statsprocess->statsprocess: **GetBufferDependencies**
statsprocess->statsprocess: **GetMultiStatsDependencies**
activate statsprocess
  note left statsprocess
    if multiCameraEnable is TRUE
    will run **UpdateStatsDependencies**
    for CaptureRequest requestId
    for UpdateStatsDenpendencies
    has <color:red><b>QTIMultiStats/Singleton/NoSync</b></color>
    three type.
  end note
  alt multiCameraEnable==TRUE
    statsprocess-> camx_multistats: UpdateStatsDependencies
    note left statsprocess
      **We can config AECAWB/AF's**
      **master/slave dependency**
      **the dependency PropertyIDAFPeerInfo means:**
      **<color:red>camxpropertyblob</color> property ID**
      **when we update or get property**
      **will write/read to this global list**
    end note
    camx_multistats->statsprocess: return
  end
  statsprocess->statsprocess:return
deactivate statsprocess

alt if HasAnyDenpendency==FALSE
  statsprocess->statsprocess: OnProcessRequest
  activate statsprocess
  statsprocess->statsprocess: StatsProcessManagerJobHandler
    activate statsprocess
      note left statsprocess
        for exposure setting map, we have
        <color:red><b>Relative sensitivity</b></color>
        <color:red><b>Absolute sensitivity</b></color>
      end note
      statsprocess->aecstatsprocessor: AEC ExecuteProcessRequest
        activate aecstatsprocessor
          alt m_skipProcessing==TRUE
            aecstatsprocessor->aecstatsprocessor: PublishSkippedFrameOutput
          else m_skipProcessing==FALSE
            aecstatsprocessor->aecstatsprocessor: ReadHALAECParam
            aecstatsprocessor->aecstatsprocessor: SetAlgoChromatix
            aecstatsprocessor->aecstatsprocessor: SetAlgoSetParams
            aecstatsprocessor->aecstatsprocessor: GetAlgoInput
            aecstatsprocessor->aecstatsprocessor: PrepareAlgorighmOutput
            aecstatsprocessor->aecengine: HandleCommand(AECCommand::ProcessStats)
              note left aecengine
                after process AECCommand
                will run AECStateMachine and
                UpdateAEEngineOutputResults
              end note
            aecengine->aecstatsprocessor:return
            aecstatsprocessor->aecstatsprocessor: PublishCrossProperty
            aecstatsprocessor->aecstatsprocessor: PublishMetadata
            activate aecstatsprocessor
              aecstatsprocessor->aecstatsprocessor: PublishPropertyPoorFrameControl
              aecstatsprocessor->aecstatsprocessor: PublishPropertyPoolFrameInfo
              aecstatsprocessor->aecstatsprocessor: PublishExternalCameraMetadata
              note left aecstatsprocessor
                update AEExposureCompensation
                and AEState/AEMode/SceneMode
                etc...
                <color:red><b>mainly run WriteDataList</b></color>
                <color:red><b>write to WriteProps like ControlModeValue</b></color>
                <color:red><b>others can get these value by read the Prop tags</b></color>
              end note

              aecstatsprocessor->aecstatsprocessor: PublishPropertyPoorInternal
              aecstatsprocessor->aecstatsprocessor: PublishPropertyDebugData
              aecstatsprocessor->aecstatsprocessor: return
            deactivate aecstatsprocessor

            aecstatsprocessor->aecstatsprocessor: UpdateScopeEvents
          end

        deactivate aecstatsprocessor

      statsprocess->awbstatsprocessor: AWB ExecuteProcessRequest
      statsprocess->cafdstatsprocessor: AFD ExecuteProcessRequest
      statsprocess->casdstatsprocessor: ASD ExecuteProcessRequest
      statsprocess->camxstatsprocessingnode: NotifyJobProcessRequestDone
    deactivate statsprocess
  deactivate statsprocess
end
deactivate statsprocess
@enduml
