一、 什么时候update to peer, 有frame dependency 吗？ 【frame dependency still not clear 】
frame denpendency 是指是不是所有的update都是基于同一个
request ID？ 这是不是就是real time pipeline的问题/或者其他
real time处理包含哪些？

二、thread pool怎么工作的？因为设计文档里将 each family  【still not clear 】
algo could be run back to back like a function call

可参考：https://confluence.qualcomm.com/confluence/display/CamNext/Thread+Services+Library+Design+Note

三、什么时候create 了stats process node 和 af stats process node 【clear now 】
因为是分开的。

四、meatadata pool是干什么的？ 【still not clear 】
https://confluence.qualcomm.com/confluence/display/CamNext/CamX+Metadata+and+Property+Pool
https://confluence.qualcomm.com/confluence/display/CamNext/CamX+Static+Metadata+Design+Note

Goal is to merge Android metadata with proprietary events/property data and
have one generic mechanism to consume, generate, circulate and notify meta information
to and from the Android framework and Camx driver.

五、关于PDLib那块，函数指针太复杂。 [TODO: still not clear]

六、用户可以通过在titan17x_usecase.xml配置pipeline，添加node，但是这些usecase是怎么被选中的？
比如配置文档里的RTB，里面会配置一个pipeline获取sensor0，另一个pipeline获取sensor1，然后各自做处理后输出。这些需要从usecase被选中到
具体的执行梳理清楚。
这一部分选取了advance usecase来剖析。大概包括怎么通过StreamConfigMode和static settings来选取usecase。
当前的usecase有哪些?
新写了camx_usecase_advance.uml

uml 阅读顺序
1. file:///C:/MyLearning/camx_chi_overview.svg
2. file:///C:/MyLearning/camx_usecase_multicam.svg
3. file:///C:/MyLearning/camx_statsprocess_flow.svg
4. file:///C:/MyLearning/camx_af.svg
5. file:///C:/MyLearning/camx_af_pdlib.svg  这里理了一下关于pdlib一些调用方面的
6. file:///C:/MyLearning/pdaf_learning.svg  8998平台 pdaf lib如何具体计算。
7. file：///C:/MyLearning/camx_usecase_advance.svg
8. file:///c:/MyLearning/af_roi_summary.svg  因为关于ROI的问题很多，所以总结一下。
9. file:///C:/MyLearning/camx_faceROIProcess.uml   face ROI是统一的，新出。目前只有AF在用。
10. file:///C:/MyLearning/camx_v4l2_callback2camx.uml         VVVVIP 非常有用。fencecallback从CSL到pipeline到session到usecase。
11. file:///C:/MyLearning/camx_pipeline2node.svg         因为pipeline里面的细节需要更清楚。单独拎出来。
12. file:///C:/MyLearning/camx_session2pipeline.svg         因为session里面的细节需要更清楚。单独拎出来。


