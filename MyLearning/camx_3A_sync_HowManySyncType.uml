@startuml
title 3A sync of 845 [[https://confluence.qualcomm.com/confluence/display/3AWIDETELE/3A+Sync+Design ReferencePage]] \n jinlin

participant camxnode #ff0000
participant afnode #00ff00
participant statsnode #GreenYellow
participant awbnode #Chartreuse
participant camxmultistatsoperator as camx_multistats #RoyalBlue

== <color:red><size:14> Af </size></color> ==
camxnode->afnode: PostPipelineCreate
activate afnode #00ff00
  afnode->afnode: InitializeMultiStats
  note over afnode
    multiStatsData.algoSyncType = <color:red><size:13>StatsAlgoSyncTypeAF</size></color>
  end note
  activate afnode #PaleGreen
    alt pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncQTI</size></color> <-- Default One
      afnode->camx_multistats: CAMX_NEW **QTIMultiStatsOperator**
      camx_multistats->afnode: return handler
    else pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncSingleton</size></color>
      afnode->camx_multistats: CAMX_NEW **SingletonStatsOperator**
      camx_multistats->afnode: return handler
    else pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncDisabled</size></color>
      afnode->camx_multistats: CAMX_NEW **NoSyncStatsOperator**
      camx_multistats->afnode: return handler
    end
  afnode->afnode: return
  deactivate afnode
afnode->camxnode: return
deactivate afnode

... ...
== <color:red><size:14> Aec </size></color> ==
camxnode->statsnode: PostPipelineCreate
activate statsnode #GreenYellow
  statsnode->statsnode: InitializeMultiStats
  note over statsnode
    multiStatsData.algoSyncType = <color:red><size:13>StatsAlgoSyncTypeAEC</size></color>
  end note
  activate statsnode #PaleGreen
    alt pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncQTI</size></color>  <-- Default One
      statsnode->camx_multistats: CAMX_NEW **QTIMultiStatsOperator**
      camx_multistats->statsnode: return handler
    else pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncSingleton</size></color>
      statsnode->camx_multistats: CAMX_NEW **SingletonStatsOperator**
      camx_multistats->statsnode: return handler
    else pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncDisabled</size></color>
      statsnode->camx_multistats: CAMX_NEW **NoSyncStatsOperator**
      camx_multistats->statsnode: return handler
    end
  statsnode->statsnode: return
  deactivate statsnode
statsnode->camxnode: return
deactivate statsnode

... ...
== <color:red><size:14> Awb</size></color> ==
camxnode->awbnode: PostPipelineCreate
activate awbnode #Chartreuse
  awbnode->awbnode: InitializeMultiStats
  note over awbnode
    multiStatsData.algoSyncType = <color:red><size:13>StatsAlgoSyncTypeAWB</size></color>
  end note
  activate awbnode #PaleGreen
    alt pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncQTI</size></color>  <-- Default One
      awbnode->camx_multistats: CAMX_NEW **QTIMultiStatsOperator**
      camx_multistats->awbnode: return handler
    else pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncSingleton</size></color>
      awbnode->camx_multistats: CAMX_NEW **SingletonStatsOperator**
      camx_multistats->awbnode: return handler
    else pStaticSettings->multiCamera3ASync == <color:red><size:14>MultiCamera3ASyncDisabled</size></color>
      awbnode->camx_multistats: CAMX_NEW **NoSyncStatsOperator**
      camx_multistats->awbnode: return handler
    end
  awbnode->awbnode: return
  deactivate awbnode
awbnode->camxnode: return
deactivate awbnode


@enduml
