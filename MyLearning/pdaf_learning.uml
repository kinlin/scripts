@startuml
title <size:18>pdaf learning of 8998</size>\n    Lin Jin
left header 
<font size="16"> use imx258 for config example. </font>
<font size="16">for example, for Res0 4208x3120, config 96x130 blocks and every block contains 8 pd pixel(4 left and 4 right) </font>
endheader

participant pdaf.c as pdaf
participant pdaf_dpd_wrapper.c as pdaf_dpd
participant pdaf_wrapper.c as pdaf_wrapper
participant pdaf_dpd_utils.c as pdaf_dpd_utils
participant pdaf_lib_common.c as pdaf_lib_common


== pdaf init ==
[o->pdaf: PDAF_PhaseDetection_init
activate pdaf
  pdaf->pdaf: PDAF_get_lib_version

  alt "persist.camera.pdaf_dump==1"
    note over pdaf: "dump \n pdaf_init_param.bin \n pdaf_version.bin"
  end

  alt  buffer_type==PDAF_BUFFER_FLAG_INTERLEAVE_CHANNEL
    pdaf->pdaf_dpd: set_dpd_context_init_info
    pdaf_dpd->pdaf: return (PD_HANDLE)p
  end

  note over pdaf_wrapper: process T2/T3 sensor
  pdaf->pdaf_wrapper: set_pd_context_init_info
  activate pdaf_wrapper
    pdaf_wrapper->pdaf_wrapper: init_sensor_info
    note over pdaf_wrapper: will read info like sensor image h/w\nblock_count_horizontal\npd_offset_horizontal etc.

    pdaf_wrapper->pdaf_wrapper: pdaf_param_init_tuning

    pdaf_wrapper->pdaf_wrapper: calculate_pd_pixel_offset
    pdaf_wrapper->pdaf: return
  deactivate pdaf_wrapper

deactivate pdaf

== pdaf calc ==
[o->pdaf: PDAF_PhaseDetection
activate pdaf
  alt "persist.camera.pdaf_dump 1"
    note over pdaf: dump pdaf_input_%s_%d.raw\npdaf_param.bin\npdaf_valid_lines.bin
  else "persist.camera.pdaf_dump 2"
    note over pdaf: dump pdaf_input_lens_pos_%4d.raw\npdaf_param.bin\npdaf_valid_lines.bin
  end

  alt dual-pd sensor
    pdaf->pdaf_dpd_wrapper: set_dpd_context_param_info
    activate pdaf_dpd_wrapper
      alt pdaf_sw_window_mode==FIXED_GRID_WINDOW
        alt p->status==PD_ACTIVE
          note over pdaf_dpd_wrapper: set new_width/new_height
        end
        alt p->status==PD_UNCONFIGURED
          pdaf_dpd_wrapper->pdaf_wrapper: set_pd_context_param_info
          pdaf_dpd_wrapper->pdaf_dpd_wrapper: allocate_dpd_grid_memory_and_config
        end
        pdaf_dpd_wrapper->pdaf_wrapper: set_pd_context_param_info
        pdaf_dpd_wrapper->pdaf_dpd_wrapper: dpd_grid_set_realtime_params
      end
        pdaf_dpd_wrapper->pdaf:return
    deactivate pdaf_dpd_wrapper

    pdaf->pdaf_dpd_wrapper: dpd_incremental_processing
    note over pdaf_dpd_wrapper: num_of_lines is come from isp\n what does this mean?
    activate pdaf_dpd_wrapper
      pdaf_dpd_wrapper->pdaf_dpd_wrapper: dpd_get_pd_center_window
      activate pdaf_dpd_wrapper
      loop grid_y_ind < window_number_ver
        pdaf_dpd_wrapper->pdaf_dpd_wrapper: **dpd_prepare_line_arg**
        note over pdaf_dpd_wrapper: 1)Prepare thie line_arg by filling all the necessary details\nin order to perform the core operations \n  **<color:red>Why need this?</color>**
        pdaf_dpd_wrapper->pdaf_dpd_wrapper: **dpd_process_grid_line**
        note over pdaf_dpd_wrapper: 2) This performs the core operation such as\n Parsing of PD pixels\n Performing Gain_map\n IIR filtering\n SAD computation
        activate pdaf_dpd_wrapper
          pdaf_dpd_wrapper->pdaf_dpd_utils: dpd_core_parse_and_preprocess(p_line_arg)
          activate pdaf_dpd_utils
            alt bit_width_type DPD_RAW_8_BIT_UNPACKED
              pdaf_dpd_utils->pdaf_dpd_utils: dpd_line_fill_buffer_with_gain_bin_8bpp_unpacked
            else bit_width_type DPD_RAW_10_BIT_UNPACKED
            else bit_width_type DPD_RAW_10_BIT_PACKED
              pdaf_dpd_utils->pdaf_dpd_utils: dpd_line_fill_buffer_with_gain_bin_10bpp_packed
            else bit_width_type DPD_RAW_12_BIT_PACKED
            else bit_width_type DPD_RAW_12_BIT_UNPACKED
            else bit_width_type DPD_RAW_16_BIT_UNPACKED
              pdaf_dpd_utils->pdaf_dpd_utils: dpd_line_fill_buffer_with_gain_bin_10bpp_unpacked
            end

            alt line_request.mode==PD_HDR_MODE
              pdaf_dpd_utils->pdaf_dpd_utils: dpd_line_fill_buffer_hdr
              note over pdaf_dpd_utils: ** From code, seems will separate left and right pixel of every pair pixel.\n  output p_gm_leftOut/p_gm_rightOut **
            end

            pdaf_dpd_utils->pdaf_dpd_utils: dpd_line_IIR_optimized
            note over pdaf_dpd_utils: **<color:red>Why use IIR here for each line</color>**
            pdaf_dpd_utils->pdaf_dpd_wrapper: return
          deactivate pdaf_dpd_utils


          pdaf_dpd_wrapper->pdaf_dpd_wrapper: dpd_core_line_sad
          note over pdaf_dpd_wrapper: ** <color:red> why need this? \n Do we compare sad or pd pixel?\n  this should move and compare?</color> **
          pdaf_dpd_wrapper->pdaf_dpd_wrapper: return
        deactivate pdaf_dpd_wrapper
      end


      pdaf_dpd_wrapper->pdaf_dpd_wrapper: compute_pd_and_confidence
      note over pdaf_dpd_wrapper: 4) After doing core operation, we finally need to compute\nPD and confidence
      pdaf_dpd_wrapper->pdaf_dpd_wrapper: compute_sad_single_window
      activate pdaf_dpd_wrapper
        pdaf_dpd_wrapper->pdaf_dpd_wrapper: compute_pd_and_confidence
        pdaf_dpd_wrapper->pdaf_dpd_wrapper: return
      deactivate pdaf_dpd_wrapper

    deactivate pdaf_dpd_wrapper
    deactivate pdaf_dpd_wrapper
    ... ...
    pdaf_dpd_wrapper->pdaf_dpd_wrapper: dpd_get_pd_peripheral_window
    note over pdaf_dpd_wrapper: almost the same as center window, so skip here.


  else Sparse pd sensor
    pdaf->pdaf_wrapper: configure_pd_context_info
    activate pdaf_wrapper
      pdaf_wrapper->pdaf_lib_common: get_global_offset_info
      alt pdaf_sw_window_mode==FIXED_GRID_WINDOW
        alt p->status==PD_CREATED
          pdaf_wrapper->pdaf_utils: **pdaf_calibration_init**
        else p->status==PD_ACTIVE
          note over pdaf_wrapper: just check config width/height equal fix window w/h
        else p->status==PD_UNCONFIGURED
          pdaf_wrapper->pdaf_wrapper: set_pd_context_param_info
          pdaf_wrapper->pdaf_utils: allocate_pdaf_grid_memory_and_config

        end
        pdaf_wrapper->pdaf_wrapper: set_pd_context_param_info
        note over pdaf_wrapper: **<color:red>why set pd context again?</color>**
      end
    pdaf_wrapper->pdaf: return
    deactivate pdaf_wrapper

    pdaf->pdaf_wrapper: pd_incremental_processing
    activate pdaf_wrapper #FFAAAA
      pdaf_wrapper->pdaf_wrapper: pd_process_center_window
      activate pdaf_wrapper #GreenYellow
      pdaf_wrapper->pdaf_utils: pdaf_window_process_optimized
      pdaf_wrapper->pdaf_utils: calculate_sad_vector
      pdaf_wrapper->pdaf_utils: calculate_pd_and_conf
        activate pdaf_utils #Chartreuse
          pdaf_utils->pdaf_utils: pd_core_sad_bias
          pdaf_utils->pdaf_utils: pd_core_pd
          pdaf_utils->pdaf_utils: pd_core_conf
          pdaf_utils->pdaf_wrapper: return
        deactivate pdaf_utils

      deactivate pdaf_wrapper
      pdaf_wrapper->pdaf_wrapper: pd_process_peripheral_window
      note over pdaf_wrapper: almost the same as center window, skip
    pdaf_wrapper->pdaf: return
    deactivate pdaf_wrapper
  end



deactivate pdaf


@enduml
