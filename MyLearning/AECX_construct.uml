/'派生，继承：<|--'/
/'组合：*-- ， 将会管理对象的生命周期'/
/'聚合：o--, 特指不管理对象的生命周期，但存在关联'/
/'
title <size:18>camx awb overview</size>\n     Lin Jin

collections ThreadUsers

<color:red><size:16>****</size></color>

<color:blue><size:15></size></color>

package <color:blue><size:15>**AWBDecisionAggregator** {
}

== <color:blue> CAWBMain::Configure </color>==

participant XXX

box "Factory"
participant camxcawbfactory as awb_factory
end box



<color:red>TODO: this need check further</color>


Useful color:
1. Red
Red Crimson DeepPink LightPink Salmon HotPink

2. Blue
MediumBlue Blue DodgerBlue DeepSkyBlue Cyan LightSkyBlue SlateBlue SkyBlue

3. Green
Chartreuse Green GreenYellow LawnGreen Lime LightGreen SpingGreen

4. Yellow
Yellow Gold LightGoldenRodYellow Orange LemonChiffon

5. Violet
DarkMagenta BlueViolet DardViolet Magenta Fuchsia Purple

6. 


class Dummy {
 -field1                     -------private
 #field2                     -------protected
 ~method1()                  -------package private
 +method2()                  -------public
}
'/

@startuml
participant qcaecalgorighminterface
participant caecxcontrol
participant CAECXCoreFactory
participant CAECXCore

== <color:blue> Create handle and init</color>==
[o->qcaecalgorighminterface: *CreateAECAlgoHandler*
activate qcaecalgorighminterface
    qcaecalgorighminterface->caecxcontrol: **CAECXControl::CreateInstance**
    activate caecxcontrol
        caecxcontrol->caecxcontrol: **loadAECXCoreAlgo**
        activate caecxcontrol
            note right caecxcontrol
                libmap "com.qti.stats.aecxcore"
                we got m_pCreateAecCoreAlgo handle
            end note
            caecxcontrol->CAECXCoreFactory: **CreateAecXCoreInstance**
            activate CAECXCoreFactory
                create CAECXCore
                CAECXCoreFactory->CAECXCore: **CAECXCore::CAECXCore**
                activate CAECXCoreFactory
                    /'set triggers'/
                    CAECXCore->CAECXCore: **SetDefaultTriggers()**
                    activate CAECXCore
                    CAECXCore<-CAECXCore: return
                    deactivate CAECXCore

                    /'create m_contManager and set tuning'/
                    create CAECXContextManager
                        /'how it construct'/
                        CAECXCore->CAECXContextManager: **IAECXContextManager::IAECXContextManager**
                        note right CAECXContextManager
                            IAECXContextManager is the parent class
                            construct first
                        end note
                        activate CAECXContextManager
                            /'aecxcontext manager will new history and bankmanager'/
                            create CAECXHistory
                            CAECXContextManager->CAECXHistory: **CAECXHistory::CAECXHistory**
                            activate CAECXHistory
                            CAECXContextManager<-CAECXHistory: return
                            deactivate CAECXHistory

                            create CAECXBankManager
                            CAECXContextManager->CAECXBankManager: **CAECXBankManager::CAECXBank::CAECXBank**
                                note right CAECXBankManager
                                    m_dataDeque.clear()
                                    init databank database
                                    <color:red>CAECXBank is a inner class of CAECXBankManager</color>
                                end note
                            activate CAECXBankManager
                            CAECXContextManager<-CAECXBankManager: return
                            deactivate CAECXBankManager

                            create CAECXCamsync
                            CAECXContextManager->CAECXCamsync: **CAECXCamsync::CAECXCamsync**
                            activate CAECXCamsync
                            CAECXContextManager<-CAECXCamsync: return
                            deactivate CAECXCamsync

                        CAECXCore<-CAECXContextManager: return
                        deactivate CAECXContextManager
                    CAECXCore->CAECXContextManager: **SetChromatix**
                    activate CAECXContextManager
                    CAECXCore<-CAECXContextManager: return
                    deactivate CAECXContextManager

                    /'init sub modules'/
                    create CAECXStatsProcessor
                    CAECXCore->CAECXStatsProcessor: **CAECXStatsProcessor::CAECXStatsProcessor**
                    create CAECXMetering
                    CAECXCore->CAECXMetering: **CAECXMetering::CAECXMetering**
                    create CAECXConvergence
                    CAECXCore->CAECXConvergence: **CAECXConvergence::CAECXConvergence**
                    create CAECXArbitration
                    CAECXCore->CAECXArbitration: **CAECXArbitration::CAECXArbitration**
                    create CAECXExtension
                    CAECXCore->CAECXExtension: **CAECXExtension::CAECXExtension**
                    create CAECXMtrTableGen
                    CAECXCore->CAECXMtrTableGen: **CAECXMtrTableGen::CAECXMtrTableGen**
                    create CAECXExtMapManager
                    CAECXCore->CAECXExtMapManager: **CAECXExtMapManager::CAECXExtMapManager**
                    create CSCDManager
                    CAECXCore->CSCDManager: **CSCDManager**
                    create CAECX1DVectorManager
                    CAECXCore->CAECX1DVectorManager: **CAECX1DVectorManager**

                CAECXCoreFactory<-CAECXCore: return
                deactivate CAECXCore
            caecxcontrol<-CAECXCoreFactory: return
            deactivate CAECXCoreFactory
        caecxcontrol->caecxcontrol: return
        deactivate caecxcontrol
    qcaecalgorighminterface<-caecxcontrol: return
    deactivate caecxcontrol
[o<-qcaecalgorighminterface: return
deactivate qcaecalgorighminterface

@enduml
