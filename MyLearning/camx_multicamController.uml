/'派生，继承：<|--'/
/'组合：*-- ， 将会管理对象的生命周期'/
/'聚合：o--, 特指不管理对象的生命周期，但存在关联'/
/'
title <size:18>camx awb overview</size>\n     Lin Jin

collections ThreadUsers

<color:red><size:16>****</size></color>

<color:blue><size:15></size></color>

package <color:blue><size:15>**AWBDecisionAggregator** {
}

== <color:blue> CAWBMain::Configure </color>==

participant XXX

box "Factory"
participant camxcawbfactory as awb_factory
end box



<color:red>TODO: this need check further</color>


Useful color:
1. Red
Red Crimson DeepPink LightPink Salmon HotPink

2. Blue
MediumBlue Blue DodgerBlue DeepSkyBlue Cyan LightSkyBlue SlateBlue SkyBlue

3. Green
Chartreuse Green GreenYellow LawnGreen Lime LightGreen SpingGreen

4. Yellow
Yellow Gold LightGoldenRodYellow Orange LemonChiffon

5. Violet
DarkMagenta BlueViolet DardViolet Magenta Fuchsia Purple

6. 
'/
<!-- Put images in c:/images directory -->
<target name="main">
<plantuml dir="./src" charset="UTF-8" />

@startuml

title 
<size:18>camx multicam controller</size>\n     Lin Jin
1. ENABLE_SNAPSHOT_FUSION: if we capture snapshot from both camera and feeding to fusion algo
2. ENABLE_LPM: where only one camera
3. SYNC_MECHANSIM: HW_SYNC, SW_SYNC(not supported)
4. SNAPSHOT_FUSION_ZOOM_MIN/MAX
5. SNAPSHOT_FUSION_LUX_IDX_THRESHOLD(1.0)
6. SNAPSHOT_FUSION_FOCUS_DIST_CM_MIN(15) if focus dist lower then thres, snapshot fusion will be disabled
end title
/'派生，继承：<|--'/
/'组合：*-- ， 将会管理对象的生命周期'/
/'聚合：o--, 特指不管理对象的生命周期，但存在关联'/

participant chxusecasemc
participant chxmulticamcontroller
participant chxzoomtranslator
participant chxextensionmodule

== <color:blue> Get Controller </color>==
chxusecasemc->chxmulticamcontroller: GetController
activate chxmulticamcontroller
  rnote over chxmulticamcontroller
    we have several controlMode
    <size:15>**CONTROLLER_TYPE_DUALFOV**</size> In usecasemc
    <size:15>**CONTROLLER_TYPE_RTB**</size> In usecasemc
    <size:15>**CONTROLLER_TYPE_BAYERMONO**</size>
    <size:15>**CONTROLLER_TYPE_VR**</size>
    
    Now the code changed, and according to the MccCreateData->logicalCameraType
    <size:15>**LogicalCameraType_SAT**</size>
    <size:15>**LogicalCameraType_RTB**</size>
    <size:15>**LogicalCameraType_BAYERMONO**</size>
    <size:15>**LogicalCameraType_VR**</size>

    有个问题：为什么有了MultiFov还保留着DualFov？
    其他：
        1. 什么是pixel size？
            就是sensor pixel的大小。也常被描述为pixel Pitch. 就是pixel与pixel之间的间隔
        2. 如何维持同样的进光量？ 暂时存疑！！！ TODO
            假设一个50mm focallength， f/1.4光圈。 如果现在perture diameter(35.7mm)【光圈直径】， focal length是8.3mm。
            同样的进光量, lens是f/0.23 (8.3/35.7)
  end rnote

  alt **pMccCreateData->logicalCameraType** == \n **pMultiCamController->GetCameraType()**
    chxmulticamcontroller->chxmulticamcontroller: pMultiCamController->**Reconfigure()**
    activate chxmulticamcontroller
      note right chxmulticamcontroller
        If already Created Controller
        will ReConfig
      end note

    chxmulticamcontroller->chxmulticamcontroller: return
    deactivate chxmulticamcontroller
  end

  alt LogicalCameraType_SAT
    chxmulticamcontroller->chxmulticamcontroller: **MultiFovController::Create**
    activate chxmulticamcontroller
      loop numOfLinkedSessions  
        note right chxmulticamcontroller
          [tips: numOflinkedSessions==numBundledCameras]
          Get Focal Length
          Get Max Zoom
          Update OTP Data
        end note

        chxmulticamcontroller->chxmulticamcontroller: **InitZoomTranslator()**
        activate chxmulticamcontroller
          chxmulticamcontroller->chxzoomtranslator: **m_pZoomTranslator->Init**
        chxmulticamcontroller->chxmulticamcontroller: return
        deactivate chxmulticamcontroller
      end loop
    chxmulticamcontroller->chxmulticamcontroller: return
    deactivate chxmulticamcontroller
  else LogicalCameraType_RTB
  end
chxmulticamcontroller->chxusecasemc: return
deactivate chxmulticamcontroller

== <color:blue> Translate Request Settings </color>==
chxusecasemc->chxmulticamcontroller: **TranslateRequestSettings**
activate chxmulticamcontroller
  note right chxmulticamcontroller
    For Main and Aux, for same CropRegion/zoom Param, they have different result
    also
    the AF ROI need translate(**TranslateMeteringRegion**). 
    the fov_ratio=main_fov/aux_fov
    首先根据sensor size等比例放大或缩小AFRegion
    然后根据fov_ration计算具体的xMin/yMin/xMax/yMax；这些region会在AF中fetch到
  end note
chxmulticamcontroller->chxusecasemc: return
deactivate chxmulticamcontroller

==<color:blue> ConsolidateCameraInfo </color>==
chxextensionmodule->chxmulticamcontroller: ConsolidateCameraInfo
activate chxmulticamcontroller
  alt **LogicalCameraType_SAT**
    chxmulticamcontroller->chxmulticamcontroller: MultiFovController::\n**ConsolidateCameraInfo**
    activate chxmulticamcontroller

      chxmulticamcontroller->chxmulticamcontroller: **ConsolidateStreamConfig()**
      activate chxmulticamcontroller
        note right chxmulticamcontroller
            mainly Update the Meta
        end note
      chxmulticamcontroller->chxmulticamcontroller: return
      deactivate chxmulticamcontroller

      chxmulticamcontroller->chxmulticamcontroller: **ConsolidateMinFpsStallDuration()**
      activate chxmulticamcontroller
      chxmulticamcontroller->chxmulticamcontroller: return
      deactivate chxmulticamcontroller

    chxmulticamcontroller->chxmulticamcontroller: return
    deactivate chxmulticamcontroller
  else **LogicalCameraType_RTB**
  end

chxextensionmodule<-chxmulticamcontroller: return
deactivate chxmulticamcontroller

==<color:blue> how we expose CameraID to app </color>==
[o->chxextensionmodule: **BuildLogicalCameraInfo()**
activate chxextensionmodule
[o<-chxextensionmodule: return
deactivate chxextensionmodule
@enduml
