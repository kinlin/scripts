/'派生，继承：<|--'/
/'组合：*-- ， 将会管理对象的生命周期'/
/'聚合：o--, 特指不管理对象的生命周期，但存在关联'/
/'
title <size:18>camx awb overview</size>\n     Lin Jin

collections ThreadUsers

<color:red><size:16>****</size></color>

<color:blue><size:15></size></color>

package <color:blue><size:15>**AWBDecisionAggregator** {
}

== <color:blue> CAWBMain::Configure </color>==

participant XXX

box "Factory"
participant camxcawbfactory as awb_factory
end box



<color:red>TODO: this need check further</color>


Useful color:
1. Red
Red Crimson DeepPink LightPink Salmon HotPink

2. Blue
MediumBlue Blue DodgerBlue DeepSkyBlue Cyan LightSkyBlue SlateBlue SkyBlue

3. Green
Chartreuse Green GreenYellow LawnGreen Lime LightGreen SpingGreen

4. Yellow
Yellow Gold LightGoldenRodYellow Orange LemonChiffon

5. Violet
DarkMagenta BlueViolet DardViolet Magenta Fuchsia Purple

6. 


class Dummy {
 -field1                     -------private
 #field2                     -------protected
 ~method1()                  -------package private
 +method2()                  -------public
}
'/

@startuml
participant camxhal3
participant chxextensionmodule
participant camxchi
participant camxchicontext
participant chimcxcameraconfig
participant camxhwenvironment
participant camximagesensordata
== <color:blue> get_camera_info</color>==
... ...
== <color:blue> get_number_of_cameras </color>==
[o->camxhal3: get_number_of_cameras
activate camxhal3
    camxhal3->chxextensionmodule: **ExtensionModule::GetNumCameras**
    activate chxextensionmodule #GreenYellow
        chxextensionmodule->chxextensionmodule: **GetDevicesSettings**
        activate chxextensionmodule  #Yellow
            chxextensionmodule->camxchi: **CamX::ChiGetSettings**
            activate chxextensionmodule
            camxchi->chxextensionmodule:
            deactivate chxextensionmodule

            chxextensionmodule->chxextensionmodule: **MappingConfigSettings**
            activate chxextensionmodule
            chxextensionmodule->chxextensionmodule:
            deactivate

            alt **0==isRunningWithVendorEnhancedFramework()**
                chxextensionmodule->chimcxcameraconfig: **GetXMLFileName**
                activate chimcxcameraconfig
                note over chimcxcameraconfig
                    why we need this Running WIth Vendor EnhancedFramework?
                end note
                chimcxcameraconfig->chxextensionmodule:
                deactivate chimcxcameraconfig
            else
                note over chimcxcameraconfig
                    xmlFileName: *LAHAINA_LEGACY_MC_XML_FILENAME*
                end note
            end
        chxextensionmodule->chxextensionmodule:
        deactivate chxextensionmodule
        alt UseLegacyTables == TRUE:
            note over chxextensionmodule
                On Lahaina, UseLegacyTables is FALSE
            end note
            chxextensionmodule->chxextensionmodule: **SortCameras()**
            activate chxextensionmodule
            chxextensionmodule->chxextensionmodule:
            deactivate chxextensionmodule

            chxextensionmodule->chxextensionmodule: **EnumerateCameras()**
            activate chxextensionmodule
            chxextensionmodule->chxextensionmodule:
            deactivate chxextensionmodule

            chxextensionmodule->chxextensionmodule: **InitializeResourceManager()**
        else
            chxextensionmodule->chxextensionmodule: **EnumerateGeneratedCameras()**
            activate  chxextensionmodule  #Yellow
                chxextensionmodule->chxextensionmodule: **FillHwDeviceInformation()**
                activate chxextensionmodule #Magenta
                    chxextensionmodule->camxchi: **ChiGetNumCameras**
                    activate camxchi
                        camxchi->camxchicontext: **GetNumCameras()**
                        activate camxchi
                        camxchicontext->camxchi:
                        deactivate camxchi
                    camxchi->chxextensionmodule:
                    deactivate camxchi

                    loop idx<numOfPhysicalCameras
                        chxextensionmodule->camxchi: **ChiGetCameraInfo**
                        activate chxextensionmodule
                            camxchi->camxchicontext: **GetCameraInfo()**
                            activate camxchicontext
                            camxchicontext->camxchi:
                            deactivate camxchicontext
                        camxchi->chxextensionmodule:
                        deactivate chxextensionmodule

                        chxextensionmodule->chxextensionmodule: **EnumerateSensorModes()**
                        activate chxextensionmodule
                            chxextensionmodule->camxchicontext: **EnumerateSensorModes()**
                            activate camxchicontext
                            camxchicontext->chxextensionmodule:
                            deactivate camxchicontext
                        chxextensionmodule->chxextensionmodule:
                        deactivate chxextensionmodule
                    end loop

                    chxextensionmodule->chimcxcameraconfig: **GetConfigurationHandle**
                    activate chimcxcameraconfig
                    note over chimcxcameraconfig
                        will run PickMachingCameraXML

                    end note
                    chimcxcameraconfig->chxextensionmodule:
                    deactivate chimcxcameraconfig

                    chxextensionmodule->chimcxcameraconfig: **GetLogicalDevices**
                    activate chimcxcameraconfig
                    chimcxcameraconfig->chxextensionmodule:
                    deactivate chimcxcameraconfig
                chxextensionmodule->chxextensionmodule:
                deactivate chxextensionmodule

                chxextensionmodule->chxextensionmodule: **ExtensionModule::BuildLogicalCameraInfo**
                activate chxextensionmodule #Magenta
                    chxextensionmodule->camxchi: **ChiGetNumCameras**
                    activate camxchi
                        camxchi->camxchicontext: **GetNumCameras()**
                        activate camxchi
                        camxchicontext->camxchi:
                        deactivate camxchi
                    camxchi->chxextensionmodule:
                    deactivate camxchi
                    loop m_numOfLogicalCameraConfiguration
                        chxextensionmodule->camxchi: **ChiGetCameraInfo**
                        activate chxextensionmodule
                            camxchi->camxchicontext: **GetCameraInfo()**
                            activate camxchicontext
                                note over camxchicontext
                                    InitializeStaticMetadata
                                    **GetSensorStaticCapability**
                                        like activeArray/FocalLength/pixelSize
                                end note
                            camxchicontext->camxchi:
                            deactivate camxchicontext

                            chxextensionmodule->camxchicontext:**EnumerateSensorModes**
                            activate camxchicontext
                                note over camxchicontext
                                    after run this Enum sensor, all sensor data is goted
                                end note
                                camxchicontext->camxhwenvironment: **HwEnvironment::GetImageSensorModuleData** 
                                activate camxhwenvironment
                                    note over camxhwenvironment
                                        return m_sensorInfoTable[cameraID].pData
                                        This Data comes from
                                            InitializeSensorStaticCaps
                                    end note
                                camxhwenvironment->camxchicontext:
                                deactivate camxhwenvironment

                                camxchicontext->camximagesensordata: **ImageSensorData::CalculateSensorCrop**
                                activate camximagesensordata
                                    note over camximagesensordata
                                        pSensorCropInfo is calc from:
                                            digital crop: 
                                            Analog:
                                            downScaleFactor: this is defined in sensor xml. like imx577 is 1.4
                                                This also affect LSC, and will used in IFE/BPS
                                            psensorcropInfo has  left,top,width,height
                                            gerrit:https://review-android.quicinc.com/#/c/2914843/
                                    end note
                                camximagesensordata->camxchicontext:
                                deactivate camximagesensordata
                            camxchicontext->chxextensionmodule:
                            deactivate camxchicontext
                        camxchi->chxextensionmodule:
                        deactivate chxextensionmodule
                    end loop
                chxextensionmodule->chxextensionmodule:
                deactivate chxextensionmodule

            chxextensionmodule->chxextensionmodule:
            deactivate chxextensionmodule
        end
    chxextensionmodule->camxhal3:
    deactivate chxextensionmodule
[o<-camxhal3: return
deactivate camxhal3
... ...
== <color:blue> get_physical_camera_info</color>==
... ...
== <color:blue> get_vendor_tag_ops </color>==
... ...



@enduml
