/'派生，继承：<|--'/
/'组合：*-- ， 将会管理对象的生命周期'/
/'聚合：o--, 特指不管理对象的生命周期，但存在关联'/
/'
title <size:18>camx awb overview</size>\n     Lin Jin

collections ThreadUsers

<color:red><size:16>****</size></color>

<color:blue><size:15></size></color>

package <color:blue><size:15>**AWBDecisionAggregator** {
}

== <color:blue> CAWBMain::Configure </color>==

participant XXX

box "Factory"
participant camxcawbfactory as awb_factory
end box



<color:red>TODO: this need check further</color>


Useful color:
1. Red
Red Crimson DeepPink LightPink Salmon HotPink

2. Blue
MediumBlue Blue DodgerBlue DeepSkyBlue Cyan LightSkyBlue SlateBlue SkyBlue

3. Green
Chartreuse Green GreenYellow LawnGreen Lime LightGreen SpingGreen

4. Yellow
Yellow Gold LightGoldenRodYellow Orange LemonChiffon

5. Violet
DarkMagenta BlueViolet DardViolet Magenta Fuchsia Purple

6. 
'/

@startuml

class INCSIntfBase{
__ public __
    + INCSIntfBase()
    + virtual ~INCSIntfBase()
    + virtual ListSensors()
    + virtual QueryCapabilites()
    + virtual GetDataSync()
    + virtual GetDataAsync()
    + virtual GetLastNSamples()
    + virtual FillCap()
    + virtual GetCaps()
    + virtual GetConfig()
    + virtual ReConfigure()
    + virtual RegisterProvider()
    + virtual UnregisterProvider()
    + virtual Flush()
    + virtual RegisterService()
    + virtual UnregisterService()
    + virtual CreateDeferConn()
    + virtual StopConnection()
    + virtual EnqueueAccessor()
    + virtual ResetTimeoutConn()
    + virtual ResetConnection()
    + virtual TriggerDataAvailable()
}

class NCSIntfSS{
__ public __
+ListSensors()
+GetInstance()
+virtual ~NCSIntfSS()
+QueryCapabilites()
+GetDataSync()
+GetLastNSamples()
+RegisterProvider()
+UnregisterProvider()
+Flush()
+RegisterService()
+UnregisterService()
+CreateDeferConn()
+StopConnection()
+FillCap()
+GetCaps()
+GetConfig()
+ReConfigure()
+EnqueueAccessor()
+GetDataAsync()
+ResetTimeoutConn()
+ResetConnection()
+TriggerDataAvailable()
__ private __
-Initialize()
-GetAccessorObject()
-PutAccessorObject()
-NCSIntfSS()
-ProbeSensor()
-FreeNCSSensorDataMemory()
-StartSpectralSensorPollingThread()
-StopSpectralSensorPollingThread()
-ConfigureSpectralSensor()
-PollSensor()
-FillSpectralSensorData()
}

class OLD_TOFSensorIntf{
__ public __
+GetInstance()
+GetTOFSensorHandle()
+Destroy()
+ConfigureTOFSensor()
+ReConfigureTOFSensor()
+ConvertToConfigurationFlags()
+GetLastNSamples(TOFData* pData, INT numOfSamples)()
+GetLastNSamples(StatsDepth16Info* pData, INT numOfSamples)()
+GetLastNSamples(AmbientRateTOFData* pData, INT numOfSamples)()
+GetDepthSensorType()
+TearDownTOFIntfLink()
+virtual ~TOFSensorIntf()
__ private __
-TOFSensorIntf()
-Initialize()
-SetupTOFLink()
-TearDownTOFLink()
-ActivateTOFSensor()
-StartPollThread()
-StopPollThread()
-TOFPollThread()
-GetSensorCapability()
-FillTOFSensorData()
-ParseSinglePointTOFData()
-ParseMultiPointTOFData()
-AllocateMemoryForMultiPointTOFSensor()
-DeAllocateMemoryForMultiPointTOFSensor()
-DumpMultiPointTOFSensorData()
}

class NEW_TOFSensorIntf{
__ public __
+GetInstance()
......
__ private __
-Initialize()
}

INCSIntfBase <|-- NCSIntfSS
INCSIntfBase <|-- NEW_TOFSensorIntf

@enduml
